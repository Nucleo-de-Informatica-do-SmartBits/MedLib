# Generated by Django 5.1.6 on 2025-03-08 09:54

import colorfield.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='author-photos/', verbose_name='Foto')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Primeiro Nome')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Data de Óbito')),
                ('addition_date', models.DateTimeField(auto_now_add=True, verbose_name='Data de adição')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('color', colorfield.fields.ColorField(blank=True, default='#efefef', image_field=None, max_length=25, null=True, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='publisher-photos', verbose_name='Foto')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Nome')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Endereço')),
                ('description', models.TextField(blank=True, max_length=150, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover-photos/', verbose_name='Capa')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Resumo')),
                ('isbn', models.CharField(max_length=13, unique=True, verbose_name='ISBN')),
                ('publication_date', models.DateField(verbose_name='Data de Publicação')),
                ('document', models.FileField(blank=True, null=True, upload_to='books/', verbose_name='Documento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('language', models.CharField(choices=[('PT', 'Português'), ('EN', 'Inglês')], default='PT', max_length=2, verbose_name='Idioma')),
                ('pages', models.PositiveIntegerField(blank=True, null=True, verbose_name='Páginas')),
                ('edition', models.PositiveIntegerField(blank=True, help_text='Por padrão o sistema registra como a primeira edição livro', null=True, verbose_name='Edição')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('authors', models.ManyToManyField(related_name='books', to='library.author')),
                ('categories', models.ManyToManyField(related_name='books', to='library.category')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='library.publisher')),
            ],
        ),
        migrations.CreateModel(
            name='BookExtraImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='book-extra-images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_images', to='library.book')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='library.book')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Sugestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=500, verbose_name='Sugestão')),
                ('date_sugested', models.DateTimeField(auto_now_add=True, verbose_name='data')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='sugestions')),
            ],
        ),
    ]
